name: Deploy Dev

on:
  push:
    branches: [ master ]
  
jobs:
  build:
    runs-on: ubuntu-latest
    environment: dev
    strategy:
      matrix:
        node-version: [14.x]
    
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: "Configure AWS Credentials Action For GitHub Actions"
      uses: aws-actions/configure-aws-credentials@v1
      with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

    - name: Build & Deploy
      run: |
        aws s3 cp s3://${{ secrets.S3_BUCKET_MASTER }}/dev.env .env
        aws s3 cp s3://${{ secrets.S3_BUCKET_MASTER }}/version.txt version.txt
        IFS='=' read -ra ADDR  <<< `tail -1 version.txt`
        new_version=`echo ${ADDR[1]} | awk -F. -v OFS=. 'NF==1{print ++$NF}; NF>1{if(length($NF+1)>length($NF))$(NF-1)++; $NF=sprintf("%0*d", length($NF), ($NF+1)%(10^length($NF))); print}'`
        echo ${{ github.sha }}=${new_version} >> version.txt 
        aws s3 cp version.txt s3://${{ secrets.S3_BUCKET_MASTER }}/version.txt
        npm install
        APP_ENV=staging APP_VERSION=${new_version} npm run build
        cd dist
        aws s3 sync . s3://${{ secrets.S3_BUCKET }}
        cd ..
        aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_ID }} --path "/*"
        
